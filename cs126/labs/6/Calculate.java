//Calculate.java provides a simple 4-function calculator.//// Adapted by: Charles Hoot, for Hands On Java.// From: Joel Adams, for Hands On C++.// Completed by: Adam Abad// Date: Febuary 20, 2018// Purpose: To use methods and switches to make a simple//         calulator.//// Specification:// input(keyboard): a char, stored in operator;//                  two reals, stored in op1 and op2;// output(screen): the result of the expression (op1 operator op2).// **************************************************************import java.util.*;  // Scannerimport java.io.*;    // PrintStreamclass Calculate extends Object{  static PrintStream theScreen = new PrintStream(System.out);  static Scanner theKeyboard = new Scanner(System.in);  static final String MENU = "\nPlease enter:\n" +                      	"\t+, to perform addition;\n" +	              		"\t-, to perform subtraction;\n" +                      	"\t*, to perform multiplication;\n" +                      	"\t/, to perform division;\n" +                        "\t^, to perform power;\n" +                      	"--> ";  public static void main(String args[])  {        theScreen.println();  	theScreen.println("Welcome to the 4-function calculator!");  	char operation = getOp();	theScreen.println();		double op1, op2;	theScreen.print("Enter operand 1: ");	op1 = getDouble();	theScreen.println(); //forturnin       	theScreen.print("Enter operand 2: ");	op2 = getDouble();		theScreen.println(); //forturnin	if (operation == '/' && op2 == 0)       {       		theScreen.println("ERROR: division by 0.");       		System.exit(1);              }	double result = apply(operation, op1, op2);	theScreen.println();	theScreen.println("" + op1 + operation + op2       + " = " + result);	theScreen.println();  }      public static char getOp()  {      char oper;      while(true)      {	  theScreen.print(MENU);	  oper = theKeyboard.nextLine().charAt(0);	  theScreen.println();	  if (oper != '+' && oper != '-' &&               	oper != '*' && oper != '/'	      && oper != '^')	      theScreen.println("ERROR: invalid operation. Must be "				+ "+, -, *, /, or ^ not " + oper);	  else break;	       }      return oper;  }  public static double getDouble()  {      double operand;      while(true)      {	  if (theKeyboard.hasNextDouble())	      break;	  else	  {	      String junk = theKeyboard.nextLine();	      theScreen.println("Error, value must be a double, not " +				junk);	  }	         }            double answer = theKeyboard.nextDouble();      String junk = theKeyboard.nextLine();      return answer;        }      public static double power(double op1, int op2)  {      double mult = 1;      for(int i = 1; i <= op2; i++)	  mult = mult * op1;      return mult;  }      public static double apply(char operation, double op1, double op2)    {	if (operation == '+')	    return op1 + op2;	else if (operation == '-')	    return op1 - op2;	else if (operation == '*')	    return op1 * op2;	else if (operation == '/')	    return op1 / op2;	else if (operation == '^')	    return power(op1,(int)op2);	{	    theScreen.println("Invalid operand: " + operation);	    System.exit(1);	    return 0;	}	           }}